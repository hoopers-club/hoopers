---

let drops = await Astro.fetchContent('../pages/posts/nftheadline/*.md');

drops=drops?.sort((b,a)=>new Date(b.publishDate).valueOf()-new Date(a.publishDate).valueOf());

drops = drops?.filter(drop=>drop.featured==true);
---
	<!-- TODO: create backend to create new nft drop -->
		
	<div style="height: 30em">

		<div id="special-slider">

			<div class="slideShow">
				<ul class="slideShow__container">
					
					{drops?.map((drop) => (
					
						<li class="slideShow__slide">
							<figure 
								class="slideShow__image" 
								style={`background-image: url('${drop?.mainphoto}');`}
								onclick={`window.open('${drop?.hyperlink}', 'new window')`}
								>
							</figure>
						</li>
					
					))}
				</ul>

				<div class="slideShow__next">
					<i class="fa fa-angle-right"></i>
				</div>
				<div class="slideShow__prev">
					<i class="fa fa-angle-left"></i>
				</div>
			
			</div>
		</div>					


		<div id="slider" class="stage">
			<div class="drops-container">
				<div class="ring" id="nft-list">

					{drops?.map((drop) => (
						<div 	
							class="img" 
							style={`background-image: url('${drop?.mainphoto}');`}
							onclick={`window.open('${drop?.hyperlink}', 'new window')`}
							>
						</div>
						//<div class="img" style="background-image: url({drops[1].mainphoto});" onclick="window.open('{drops[1].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[2].mainphoto});" onclick="window.open('{drops[2].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[3].mainphoto});" onclick="window.open('{drops[3].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[4].mainphoto});" onclick="window.open('{drops[4].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[5].mainphoto});" onclick="window.open('{drops[5].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[6].mainphoto});" onclick="window.open('{drops[6].hyperlink}','_blank')"></div>
						//<div class="img" style="background-image: url({drops[7].mainphoto});" onclick="window.open('{drops[7].hyperlink}','_blank')"></div>					
					))}
				</div>
			</div>
		</div>

		
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.6.1/gsap.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/zepto/1.2.0/zepto.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"></script>
	
	<script>
		let xPos = 0;
		
		if (window.innerWidth >= 860) {

			document.getElementById("special-slider").setAttribute("style", "display: none");
			document.getElementById("slider").setAttribute("style", "display: inherit");

			gsap.timeline()
				.set('.ring', { rotationY:180, cursor:'grab' }) //set initial rotationY so the parallax jump happens off screen
				.set('.img',  { // apply transform rotations to each image
				rotateY: (i)=> i*-45,
				transformOrigin: '50% 50% 500px',
				z: -500,
				//backgroundImage:(i)=>'url({drop.mainphoto})',
				backgroundPosition:(i)=>getBgPos(i),
				backfaceVisibility:'hidden',
				backgroundSize:'cover'
				})    
				.from('.img', {
				duration:1.5,
				y:200,
				opacity:0,
				stagger:0.1,
				ease:'expo'
				})
				.add(()=>{
				$('.img').on('mouseenter', (g)=>{
					let current = g.currentTarget;
					gsap.to('.img', {opacity:(i,t)=>(t==current)? 1:0.5, ease:'power3'})
				})
				$('.img').on('mouseleave', (g)=>{
					gsap.to('.img', {opacity:1, ease:'power2.inOut'})
				})
			}, '-=0.5')
		

			$(window).on('mousedown touchstart', dragStart);
			$(window).on('mouseup touchend', dragEnd);
				

			function dragStart(g){ 
				if (g.touches) g.clientX = g.touches[0].clientX;
				
				xPos = Math.round(g.clientX);
				gsap.set('.ring', {cursor:'grabbing'})
				$(window).on('mousemove touchmove', drag);
			}


			function drag(g){
				if (g.touches) g.clientX = g.touches[0].clientX;    
				$('#nft-list').css('pointer-events','none');
				
				
				gsap.to('.ring', {
					rotationY: '-=' +( (Math.round(g.clientX)-xPos)%360 ),
					onUpdate:()=>{ gsap.set('.img', { backgroundPosition:(i)=>getBgPos(i) }) }
				});
				
				xPos = Math.round(g.clientX);
			}


			function dragEnd(g){
				$(window).off('mousemove touchmove', drag);
				
				gsap.set('.ring', {cursor:'grab'});
				$('#nft-list').css('pointer-events','auto');

			}


			function getBgPos(i){ //returns the background-position string to create parallax movement in each image
				return ( 100-gsap.utils.wrap(0,360,gsap.getProperty('.ring', 'rotationY')-180-i*45)/360*500 )+'px 0px';
			}
		} else {
			document.getElementById("special-slider").setAttribute("style", "display: initial");
			document.getElementById("slider").setAttribute("style", "display: none");

			// Debounce
			function debounce(a,b,c){
				var d;
				return function(){
					var e=this,f=arguments;
					clearTimeout(d),d=setTimeout(function(){
						d=null,c||a.apply(e,f)
					},b),c&&!d&&a.apply(e,f)
				}
			}

			var SlideShow = function() {
				
				var
					slider,
					slide,
					nextButton,
					prevButton,
					slideAmount,
					sliderWidth,
					clickCounter,
					slideCounter;
				
				var _init = function () {
					slider        = document.getElementsByClassName('slideShow__container')[0];
					slide         = document.getElementsByClassName('slideShow__slide');
					slideAmount   = slide.length;
					nextButton    = document.getElementsByClassName('slideShow__next')[0];
					prevButton    = document.getElementsByClassName('slideShow__prev')[0];    
					sliderWidth   = parseInt(getComputedStyle(slider).width);
					clickCounter  = 0;  
					slideCounter  = 0;  
					
					_eventHandlers();
					_navButtons();
					_animateSlideIn(slideCounter);
				}
				
				var _eventHandlers = function() {
					nextButton.addEventListener('click', _slideNext, false);
					prevButton.addEventListener('click', _slidePrev, false);
					window.addEventListener('resize', _resize, false);
				} 
				
				var _navButtons = function () {
					if (clickCounter === 0 ) {
					prevButton.classList.add('is-inactive')
					} else {
					prevButton.classList.remove('is-inactive')
					}
				}  
				
				var _slideNext = function() {  
					clickCounter++;    
					slideCounter = clickCounter-1;
					if(clickCounter >= slideAmount) {
					clickCounter = 0;
					slideCounter = slideAmount - 1;
					}  
					var tl = new TimelineLite();
					tl 
					.add(_animateSlideOut(slideCounter))
					.to(slider, .9, {x:-clickCounter*sliderWidth, ease: Power2.easeOut})  
					.add(_animateSlideIn(clickCounter))
					_navButtons();    
				}
				
				var _slidePrev = function() {
					if(clickCounter > 0 ) {
					clickCounter--;
					
					// _getPreviousSlide(clickCounter +1)
					var tl = new TimelineLite();
					tl
					.add(_animateSlideOut(clickCounter+1))
					.to(slider, .9, {x:'+='+sliderWidth, ease: Power2.easeOut}, '-=0.2')
					.add(_animateSlideIn(clickCounter));
					
					}    
					_navButtons();    
				}
				
				var _animateSlideIn = function(index) {
					var currentSlide  = slide[index];
					var image         =  currentSlide.children[0];
				
					
					var tl            = new TimelineLite();    
					tl      
					.to(image, 0.4, {scale: 1, ease:Power2.easeOut},'-=0.6' )
					return tl;
				}
				
				var _animateSlideOut = function(index) {
					var currentSlide = slide[index];
					var image         =  currentSlide.children[0];
					
					var tl = new TimelineLite();
					tl
					.to(image, 0.4, {scale: 0.8, ease:Power2.easeIn}, '-=0.3' )
					return tl;      
				}
				
				var _resize = debounce(function() {    
					sliderWidth   = parseInt(getComputedStyle(slider).width);
					sliderOffset = sliderWidth * clickCounter;
					slider.style.transform = 'matrix(1, 0, 0, 1, -'+ sliderOffset + ', 0)'
				}, 50)
				
				return {
					init: _init
				}
				
			}();

			SlideShow.init();
		}
	</script>

	

	<!--

		<section class="nft black" style="min-height:0;position:relative;">
		
		<div class="nft-drops drops">Our Latest Drops</div>

		
		

		{drops?.map((drop) => (
			<div class="nft-list nft-list-all">
				<div class="nft-drop-title">
					<div class="drop-title">{drop?.dropname}</div>
					<div class="articles-list-all">
						{drop?.galleryImages?.map((dropGallery) => (
							
							<a class="articles-item" href={ dropGallery?.url } target="_blank">
								
								<div
									class="articles-item"
									style={`
										background:linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.3) ), 
													url('${dropGallery?.image}');
										background-repeat: no-repeat;
										background-size: cover;
										background-color: hsla(0%, 0%, 0%, 0.5);
										background-position:center;
									`}
									onclick={`window.open('${dropGallery?.url}', 'new window')`}
								>
								</div>
								<div class="drop-name">{dropGallery?.name}</div>
								<div class="drop-artist">{dropGallery?.artist}</div>
								<div class="drop-bid">current bid</div>
								<div class="drop-price">{dropGallery?.price}</div>
							</a>
					
						))}
					</div>

					<img class="separator centered" src="/assets/esports/Line Breaker.svg" alt="" />
		
				</div>

			</div>

		))}
	
    
	</section>

	-->

	
		
        	