---
// Component Imports

import Menus from '../components/Menu.jsx'
import Search from '../components/Search.jsx'
import Footer from '../components/Footer.astro'



// You can import components from any supported Framework here!


// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.


// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

---


<style lang="scss">

body {
    min-height:100vh;
    display:flex;
    flex-direction:column;
    
    }
   
</style>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <script defer src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
    <title>Hoopers</title>


	<!-- Primary Meta Tags -->
	<meta name="title" content="Hoopers" />
    <meta name="author" content="Hoopers">
    <meta name="description" content="Global basketball community platform connecting players, fans and enthusiasts through products, contents, experiences and NFTs.">
	
	<!-- Open Graph / Facebook -->
	<meta property="og:type" content="website" />
	<meta property="og:url" content="https://www.hoopers.club" />
	<meta property="og:title" content="Hoopers" />
	<meta property="og:description" content="Global basketball community platform connecting players, fans and enthusiasts through products, contents, experiences and NFTs." />

	<!-- Twitter -->
	<meta property="twitter:title" content="Hoopers" />
	<meta property="twitter:description" content="Global basketball community platform connecting players, fans and enthusiasts through products, contents, experiences and NFTs." />


    <link rel="shortcut icon" href="https://www.hoopers.club/assets/favicon.svg" type="image/x-icon">
	<link rel="apple-touch-icon" href="https://www.hoopers.club/assets/favicon.png">
	<link rel="icon" href="https://www.hoopers.club/assets/favicon.svg">
	<link rel="mask-icon" href="https://www.hoopers.club/assets/favicon.svg" color="#fff">

	<meta name="msapplication-TileColor" content="#ffffff">
	<meta name="msapplication-TileImage" content="https://www.hoopers.club/assets/favicon.png">
	<meta name="theme-color" content="#ffffff">
	<meta name="theme-color" content="#6ee7b7">

	<!-- Open Graph / Facebook -->
	<meta property="og:image:secure_url" content="https://www.hoopers.club/assets/bray_hero.jpg" />

	<!-- Twitter -->
	<meta property="twitter:card" content="summary_large_image" />
	<meta property="twitter:image" content="https://www.hoopers.club/assets/bray_hero.jpg" />

	<link rel="manifest" href="https://www.hoopers.club/assets/manifest.json" />


    <link rel="stylesheet" href="{Astro.resolve('../styles/css/main.css')}">
    
 


</head>
<body>
    <main style="background-color: white;">
        <header>
       <Menus client:visible/>
         		<div class='dropdown'>
					<button class='dropbtn'>LANG</button>
					<div class='dropdown-content'>
						<a
							href='#'
							onclick="doGTranslate('en|pt');return false;"
							title='Portuguese'
							class='glink nturl notranslate'>
							PT
						</a>
						<a
							href='#'
							onclick="doGTranslate('pt|en');return false;"
							title='english'
							class='glink nturl notranslate'>
							EN
						</a>
						<a
							href='#'
							onclick="doGTranslate('en|es');return false;"
							title='Spanish'
							class='glink nturl notranslate'>
							ES
						</a>
					</div>
				</div>
        </header>
     
<slot/>
            </main>
<Search client:visible/>
               <!--
           - You can also use imported framework components directly in your markup!
           -
           - Note: by default, these components are NOT interactive on the client.
           - The `:visible` directive tells Astro to make it interactive.
           -
           - See https://docs.astro.build/core-concepts/component-hydration/ 
           -->

           <Footer/>


           <script>
  if (window.netlifyIdentity) {
    window.netlifyIdentity.on("init", user => {
      if (!user) {
        window.netlifyIdentity.on("login", () => {
          document.location.href = "/admin/";
        });
      }
    });
  }


  	
const right_i= document.querySelectorAll('.right-i')


observer= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if (entry.intersectionRatio>0) {
		entry.target.style.animation=`left 1s 0.5s forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
}
);




	const left_i= document.querySelectorAll('.left-i')

		observer_article= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if ( entry.intersectionRatio>0) {
		entry.target.style.animation=`right 1s 0.5s forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
})

	const down_i= document.querySelectorAll('.down-i')

		observer_= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if (entry.intersectionRatio>0) {
		entry.target.style.animation=`down 2s ${entry.target.dataset.delay?entry.target.dataset.delay:'0s'} forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
})

right_i.forEach(right => {
  observer.observe(right)
});



	left_i.forEach(left => {
  observer_article.observe(left)
});

	down_i.forEach(down => {
  observer_.observe(down)
});



const centerright_i= document.querySelectorAll('.centerright-i')


observercenter= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if (entry.intersectionRatio>0) {
		entry.target.style.animation=`left 1s  forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
}
);




	const centerleft_i= document.querySelectorAll('.centerleft-i')

		observer_articlecenter= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if ( entry.intersectionRatio>0) {
		entry.target.style.animation=`right 1s 0.5s forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
})

	const centerdown_i= document.querySelectorAll('.centerdown-i')

		observer_center= new IntersectionObserver(entries=>{
entries.forEach(entry => {
  
	if (entry.intersectionRatio>0) {
		entry.target.style.animation=`down 2s forwards ease-out`;
	}else{
		entry.target.style.animation=`none`;
	}
})
})


centerright_i.forEach(right => {
  observercenter.observe(right)
});



	centerleft_i.forEach(left => {
  observer_articlecenter.observe(left)
});

	centerdown_i.forEach(down => {
  observer_center.observe(down)
});


const test=[ {
    title: 'Stephen A. Smith: “Lonzo Ball deve ir L.A. e LaVine para a costa Este”',
    url: 'https://www.nbaportugal.com/stephen-a-smith-lonzo-ball-deve-ir-l-a-e-lavine-para-a-costa-este/',
    image: 'https://www.nbaportugal.com/wp-content/uploads/2021/03/imagem_2021-03-24_084031.png'
  },
  {
    title: 'Bol Bol esteve para ser trocado por Lonzo?',
    url: 'https://www.nbaportugal.com/bol-bol-esteve-para-ser-trocado-por-lonzo/',
    image: 'https://www.nbaportugal.com/wp-content/uploads/2021/03/imagem_2021-03-23_150720-800x445.png'
  }]

</script>
<style >
			#goog-gt-tt {
				display: none !important;
			}
			.goog-te-banner-frame {
				display: none !important;
			}
			.goog-te-menu-value:hover {
				text-decoration: none !important;
			}
			.goog-text-highlight {
				background-color: transparent !important;
				box-shadow: none !important;
			}
			body {
				top: 0 !important;
			}
			#google_translate_element2 {
				display: none !important;
			}
		</style>

		<div id="google_translate_element2"></div>
		<script defer>
			function googleTranslateElementInit2() {
				new google.translate.TranslateElement(
					{ pageLanguage: 'pt', autoDisplay: false },
					'google_translate_element2'
				);
			}
		</script>
		<script
			src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit2"
			defer
		></script>

		<script>
			function GTranslateGetCurrentLang() {
				var keyValue = document['cookie'].match(
					'(^|;) ?googtrans=([^;]*)(;|$)'
				);
				return keyValue ? keyValue[2].split('/')[2] : null;
			}
			function GTranslateFireEvent(element, event) {
				try {
					if (document.createEventObject) {
						var evt = document.createEventObject();
						element.fireEvent('on' + event, evt);
					} else {
						var evt = document.createEvent('HTMLEvents');
						evt.initEvent(event, true, true);
						element.dispatchEvent(evt);
					}
				} catch (e) {}
			}
			function doGTranslate(lang_pair) {
				if (lang_pair.value) lang_pair = lang_pair.value;
				if (lang_pair == '') return;
				var lang = lang_pair.split('|')[1];
				if (
					GTranslateGetCurrentLang() == null &&
					lang == lang_pair.split('|')[0]
				)
					return;
				var teCombo;
				var sel = document.getElementsByTagName('select');
				for (var i = 0; i < sel.length; i++)
					if (sel[i].className.indexOf('goog-te-combo') != -1) {
						teCombo = sel[i];
						break;
					}
				if (
					document.getElementById('google_translate_element2') == null ||
					document.getElementById('google_translate_element2').innerHTML
						.length == 0 ||
					teCombo.length == 0 ||
					teCombo.innerHTML.length == 0
				) {
					setTimeout(function () {
						doGTranslate(lang_pair);
					}, 500);
				} else {
					teCombo.value = lang;
					GTranslateFireEvent(teCombo, 'change');
					GTranslateFireEvent(teCombo, 'change');
				}
			}
		</script>
</body>
</html>
